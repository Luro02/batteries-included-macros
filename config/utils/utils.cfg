# Extrude the given length of filament with the specified feed_rate.
[gcode_macro _unscaled_e_move]
gcode:
    {% set length = params.LENGTH|float %}
    {% set feed_rate = params.FEED_RATE|float %}
    SAVE_GCODE_STATE NAME=_unscaled_e_move_state
    # switch to relative movements
    G91
    M117 Extruding LENGTH={length} FEED_RATE={feed_rate}
    # extrude the length with the feed_rate
    G1 E{length} F{feed_rate}
    RESTORE_GCODE_STATE NAME=_unscaled_e_move_state

[gcode_macro _ASYNC_MIN_TEMP_CHECK]
gcode:
    {% set T = params.T|default(200)|float %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M104 S{printer.extruder.target|float} T0
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M117 No setpoint, heating to {T}.
            M104 S{T} T0
        {% endif %}
    {% endif %}

    # TEMPERATURE_WAIT SENSOR=heater_bed minimum={min_bed} maximum={max_bed}

# Checks if there is a setpoint for the extruder:
# - If this setpoint is reached, continue.
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro _MIN_TEMP_CHECK]
gcode:
    {% set T = params.T|default(200)|float %}
    _ASYNC_MIN_TEMP_CHECK T={T}
    TEMPERATURE_WAIT SENSOR=extruder minimum={T}